@model Amoozeshgah.ViewModel.BasicInfoDto

@{
    ViewBag.Title = "EstateInfo";
}
<div class="col-md-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="panel panel-default lobiPanel">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h4>اطلاعات ملک</h4>

                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-group col-md-12">
                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-success  alert-dismissible">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong>توجه!</strong>

                                @TempData["Message"]

                            </div>
                        }
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Id, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CategoryItems, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">

                            @foreach (var s in Model.CategoryItems)
                            {
                                <input type="checkbox" checked="checked" disabled="disabled" /> @s
                            }
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Category, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                   
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Shift, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Shift, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Sex, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.PhoneNo1, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.EditorFor(m => m.PhoneNo1 , new { htmlAttributes = new { @class = "form-control", placeholder = "تلفن ثابت" } })
                            @Html.ValidationMessageFor(model => model.PhoneNo1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.EditorFor(m => m.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "کد پستی" } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "نشانی" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CertificateTypeId, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.DropDownListFor(m => m.CertificateTypeId, Model.CertificateTypes, new { @class = "form-control bsp" })
                            @Html.ValidationMessageFor(model => model.CertificateTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CertificateCode, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.EditorFor(m => m.CertificateCode, new { htmlAttributes = new { @class = "form-control", placeholder = "کد مجوز موافقت اصولی" } })
                            @Html.ValidationMessageFor(model => model.CertificateCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.EstablishmentDate, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @{
                                var establishmentDates = new List<SelectListItem>();
                                for (var i = 1350; i <= 1397; i++)
                                {
                                    establishmentDates.Add(new SelectListItem
                                    {
                                        Value = i.ToString(),
                                        Text = i.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(m => m.EstablishmentDate, establishmentDates,"انتخاب کنید", new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.EstablishmentDate, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CourseHoldingTypesIds, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.DropDownListFor(m => m.CourseHoldingTypesIds, Model.CourseHoldingTypes, htmlAttributes: new { @class = "form-control bsp", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.CourseHoldingTypesIds, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-12">
                        <br /><hr />
                        <div class="col-md-offset-4 col-md-4">
                            <input type="submit" value="ذخیره" class="btn btn-outline btn-success btn-block" />
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
</div>