@model Amoozeshgah.ViewModel.StudentRegisterDto

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RegisterNewStudent</title>
    <link href="~/wwwroot/Content/bootstrap.rtl.min.css" rel="stylesheet" />
    <link href="~/wwwroot/Content/vazir-font.css" rel="stylesheet" />
    <link href="~/wwwroot/bower_components/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet" />
    <style>
        .row {
            margin-top: 40px;
            padding: 0 10px;
        }

        .clickable {
            cursor: pointer;
        }

        .panel-heading span {
            margin-top: -20px;
            margin-right: 5px;
            font-size: 15px;
        }

        .lblMini {
            font-size: 12px;
            padding-right: 0;
            padding-left: 0;
        }
    </style>
</head>
<body style="font-family: Vazir !important">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="row">
                <div class="form-horizontal">
                    <center><img class="img-responsive" src="~/wwwroot/images/student-register-title.png" /></center>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="panel panel-primary">
                        <div class="panel-heading">

                            <h3 class="panel-title clickable" style="margin-right: 30px">اطلاعات فردی</h3>
                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                        </div>
                        <div class="panel-body">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.NationalCode, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.NationalCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NationalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.BirthDateJalali, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.BirthDateJalali, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BirthDateJalali, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.FatherFirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FatherFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FatherFirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.ParentFirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ParentFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ParentFirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.ParentLastName, htmlAttributes: new { @class = "control-label col-md-4 lblMini" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ParentLastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ParentLastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SexId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.SexId, Model.Sexes, htmlAttributes: new { @class = "form-control bsp" })
                                    @Html.ValidationMessageFor(model => model.SexId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.ProvinceOfBirthId, htmlAttributes: new { @class = "control-label col-md-4 lblMini" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.ProvinceOfBirthId, Model.Provinces, htmlAttributes: new { @class = "form-control bsp" })
                                    @Html.ValidationMessageFor(model => model.ProvinceOfBirthId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.CityOfBirthId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.CityOfBirthId, Model.Cities, htmlAttributes: new { @class = "form-control s2" })
                                    @Html.ValidationMessageFor(model => model.CityOfBirthId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title clickable" style="margin-right: 30px">اطلاعات تماس</h3>
                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                        </div>
                        <div class="panel-body">

                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.CellPhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CellPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CellPhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.ProvinceOfLocationId, htmlAttributes: new { @class = "control-label col-md-4 lblMini" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.ProvinceOfLocationId, Model.Provinces, htmlAttributes: new { @class = "form-control bsp" })
                                    @Html.ValidationMessageFor(model => model.ProvinceOfLocationId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.CityOfLocationId, htmlAttributes: new { @class = "control-label col-md-4 " })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.CityOfLocationId, Model.Cities, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CityOfLocationId, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </div>

                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title clickable" style="margin-right: 30px">اطلاعات ورود</h3>
                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                        </div>
                        <div class="panel-body">

                            <div class="form-group col-md-4">
                                <label for="username" class="control-label col-md-4">نام کاربری</label>
                                <div class="col-md-8">
                                    <input type="text" id="username" class="form-control disabled" readonly="readonly" />
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label col-md-4"><a href="#"><img alt="Captcha" id="imgcpatcha" src="@Url.Action("CaptchaImage","Captcha")" /></a></label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Captcha, new { htmlAttributes = new { @class = "form-control", placeholder = "حاصل جمع" } })
                                    @Html.ValidationMessageFor(model => model.Captcha, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <script src="~/wwwroot/bower_components/jquery/dist/jquery.js"></script>
    <script src="~/wwwroot/Scripts/bootstrap.rtl.min.js"></script>
    <script src="~/wwwroot/bower_components/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/wwwroot/bower_components/bootstrap-select/dist/js/i18n/defaults-fa_IR.js"></script>
    <script src="~/wwwroot/Scripts/jquery.validate.min.js"></script>
    <script src="~/wwwroot/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function ($) {
            $("#ProvinceOfBirthId").on('change', function () {

                var provinceId = $(this).val();
                if (provinceId) {
                    $.ajax({
                        type: 'Post',
                        datatype: "json",
                        url: '/Account/AjaxProvinceCities/',
                        data: { provinceId: provinceId },
                        success: function (cities) {

                            $('#CityOfBirthId').empty();
                            $('#CityOfBirthId').append('<option selected>انتخاب کنید</option>');
                            $(cities).each(function (index, item) {
                                debugger;
                                var value = item.Id;
                                var text = item.Text;
                                $('#CityOfBirthId').append('<option value=' + value + '>' + text + '</option>');
                            });

                        },
                        error: function (e) {
                            alert("error");
                        }
                    });
                } else {
                    $('#CityOfLocationId').remove('option');
                }
            });
        });
    </script>


    <script>
        $(document).ready(function ($) {
            $("#ProvinceOfLocationId").on('change', function () {

                var provinceId = $(this).val();
                if (provinceId) {
                    $.ajax({
                        type: 'Post',
                        datatype: "json",
                        url: '/Account/AjaxProvinceCities/',
                        data: { provinceId: provinceId },
                        success: function (cities) {

                            $('#CityOfLocationId').empty();
                            $('#CityOfLocationId').append('<option selected>انتخاب کنید</option>');
                            $(cities).each(function (index, item) {
                                debugger;
                                var value = item.Id;
                                var text = item.Text;
                                $('#CityOfLocationId').append('<option value=' + value + '>' + text + '</option>');
                            });

                        },
                        error: function (e) {
                            alert("error");
                        }
                    });
                } else {
                    $('#CityOfLocationId').remove('option');
                }
            });
        });
    </script>
    <script>
        jQuery(document).ready(function ($) {
            $('.bsp').selectpicker({
                style: 'btn-default',
                tickIcon: 'glyphicon-ok',
                title: 'انتخاب کنید',
                showTick: true,
                showIcon: true,
                liveSearch: true,
                liveSearchPlaceholder: 'جستجو',
                dropdownAlignRight: true,

            });
            $('.bootstrap-select.btn-group .dropdown-toggle .filter-option').css("text-align", "right")
        });


    </script>
<script>
    $("#NationalCode").on("input",
        function (e) {
            var input = $(this);
            $("#username").val(input.val());

        });

</script>
<script type="text/javascript">
    $(function () {
        $('#imgcpatcha').click(function () {

            var d = new Date();
            $("#imgcpatcha").attr("src", "/Captcha/CaptchaImage?" + d.getTime());

        });
    });
</script>
</body>
</html>
