@model Amoozeshgah.ViewModel.CertificateDto

@{
    ViewBag.Title = "مجوز ها";
}
<style>
    .white-readonly {
        background-color: white !important;
    }
</style>
<div class="col-md-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="panel panel-default lobiPanel">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h4>مجوز ها</h4>

                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-group col-md-12">
                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-success  alert-dismissible">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong>توجه!</strong>

                                @TempData["Message"]

                            </div>
                        }
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.TemporaryEstablishmentCertificateJalaliDate, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.TemporaryEstablishmentCertificateJalaliDate, new { @class = "form-control white-readonly", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model=>model.TemporaryEstablishmentCertificateJalaliDate,"",new {@class="text-danger"})
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.TemporaryEstablishmentCertificateNumber, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.TemporaryEstablishmentCertificateNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TemporaryEstablishmentCertificateNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.BootCertificateJalaliDate, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.BootCertificateJalaliDate, new { @class = "form-control white-readonly", @readonly="readonly" })
                            @Html.ValidationMessageFor(model => model.BootCertificateJalaliDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.BootCertificateNumber, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.BootCertificateNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BootCertificateNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.EvenOddCertificateJalaliDate, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.EvenOddCertificateJalaliDate, new { @class = "form-control white-readonly", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.EvenOddCertificateJalaliDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.EvenOddCertificateNumber, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.EvenOddCertificateNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EvenOddCertificateNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.MovementCertificateJalaliDate, htmlAttributes: new { @class = "control-label col-md-5 required" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.MovementCertificateJalaliDate, new { @class = "form-control white-readonly", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.MovementCertificateJalaliDate, "", new { @class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group col-md-12">
                        <br /><hr />
                        <div class="col-md-offset-4 col-md-4">
                            <input type="submit" value="ذخیره" class="btn btn-outline btn-success btn-block" />
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
</div>

@section scripts
{
    <script src="~/wwwroot/bower_components/persian-jalali-calendar/src/kamadatepicker.js"></script>

    <script>
  
        var customOptions = {
            closeAfterSelect: true
            , buttonsColor: "blue"
            , forceFarsiDigits: false
            , markToday: true
            , markHolidays: true
            , highlightSelectedDay: true
            , sync: true
            , gotoToday: true
        }
        kamaDatepicker('TemporaryEstablishmentCertificateJalaliDate', customOptions);
        kamaDatepicker('BootCertificateJalaliDate', customOptions);
        kamaDatepicker('MovementCertificateJalaliDate', customOptions);
        kamaDatepicker('EvenOddCertificateJalaliDate', customOptions);

		
    </script>

}
